var fs = require('fs');
var util = require('util');
var EventEmitter = require("events").EventEmitter;
var _ = require('underscore');
var http = require('https');
var qs = require('querystring');


function CurrentPlaylist(){	
	var player_opts;
	var server_options;
};

util.inherits(CurrentPlaylist, EventEmitter);

CurrentPlaylist.prototype.init = function(player_opts, server_options){
	var self = this;
	self.player_opts = player_opts;
	self.server_options = server_options;
}

//controle da lista de musicas atual
CurrentPlaylist.prototype.getLocalList = function(){
	var self = this;
	var data = fs.readFileSync('./data/list.json',{encoding:'utf-8',flag:'r'});
	
	if( JSON.parse(data) ){
		var list = {};
		var e = self._events;
		_.extend(self, JSON.parse(data));
		self._events = e;
		self.status = 'loaded';
		return list;
	} else {
		return null;
	};
}
//controle da lista de musicas atual
CurrentPlaylist.prototype.loadList = function(){
	var self = this;
	try {
		var data = fs.readFileSync('./data/list.json',{encoding:'utf-8',flag:'r'});
		if( JSON.parse(data) ){
			self.emit('loadlist-complete', JSON.parse(data));
		}
	} catch (err) {
		self.emit('loadlist-error');
	}
}
CurrentPlaylist.prototype.setLocalList = function( list, dir, playlistCode, token ){
	var self = this;
	var d = new Date();
	console.log("CurrentPlaylist.prototype.setLocalList");
	console.log(list);
	list.date = d.getTime();
	
	var parse = JSON.stringify(list, null, '\t');
	var data = fs.writeFile('./data/list.json', parse,{encoding:'utf-8',flag:'w'},function( err ){ 
		if(err){
			console.log("Erro ao salvar nova lista");
		} else {
			console.log("Nova lista salva com sucesso");
		}
	});
}



module.exports = new CurrentPlaylist();

