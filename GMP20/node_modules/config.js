var fs = require('fs');
var util = require('util');
var EventEmitter = require("events").EventEmitter;

var path = require('path');
var _ = require('underscore');


function Config(){
	var self = this;
	var status = 'unloaded';
};

util.inherits(Config, EventEmitter);

Config.prototype.init = function(){
	console.log('config init');
	console.log('config pre-load-complete', this);	
	this.load();
	
}

Config.prototype.load = function(){
	var data = fs.readFileSync('./data/config.json',{encoding:'utf-8',flag:'r'});
	if( JSON.parse(data) ){
		var e = this._events;
		_.extend(this, JSON.parse(data));
		this._events = e;
		this.status = 'loaded';
		this.emit('loadcomplete');	
	};
}

Config.prototype.save = function(){
	var self = this;
	var parse = JSON.stringify(this, null, '\t');
	console.log(this, parse);
	//return;
	var data = fs.writeFile('./data/config.json', parse,{encoding:'utf-8',flag:'w'},function(){ self.emit('load-complete'); });

}

module.exports = new Config();